name: tf-multistage

on:
  push:
    branches: [ main ]     # auto plan on pushes to main
  workflow_dispatch:
    inputs:
      action:
        description: "Stage to run manually"
        required: true
        type: choice
        default: apply
        options:
          - apply
          - destroy-apply
      plan_sha:
        description: "Commit SHA whose plan/destroy-plan to use (default: current SHA)"
        required: false
        type: string

permissions:
  contents: read

env:
  PLAN_BUCKET: plan-bucket-aa
  DESTROY_SUBPATH: destroy
  TF_IN_AUTOMATION: "true"

jobs:
  # --------------------------------
  # PLAN (auto on push)
  # --------------------------------
  plan:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform
        run: |
          curl -sSL -O "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip -q terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -out=plan.tfplan

      - name: Checksum plan
        run: sha256sum plan.tfplan | awk '{print $1}' > plan.tfplan.sha256

      - name: Upload plan to GCS
        run: |
          SAFE_PREFIX="${{ github.repository }}-${{ github.sha }}"
          echo "SAFE_PREFIX=${SAFE_PREFIX}"
          gsutil cp plan.tfplan gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan
          gsutil cp plan.tfplan.sha256 gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan.sha256

  # --------------------------------
  # APPLY (manual)
  # --------------------------------
  apply:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform
        run: |
          curl -sSL -O "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip -q terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Resolve SAFE_PREFIX (which plan to apply)
        id: prefix
        run: |
          SHA="${{ github.event.inputs.plan_sha }}"
          if [ -z "$SHA" ]; then SHA="${{ github.sha }}"; fi
          echo "safe_prefix=${{ github.repository }}-${SHA}" >> $GITHUB_OUTPUT
          echo "Using plan from SHA=$SHA"

      - name: Download plan from GCS
        run: |
          SAFE_PREFIX="${{ steps.prefix.outputs.safe_prefix }}"
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan ./plan.tfplan
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/plan.tfplan.sha256 ./plan.tfplan.sha256

      - name: Verify checksum
        run: |
          DOWN_HASH="$(sha256sum plan.tfplan | awk '{print $1}')"
          EXP_HASH="$(cat plan.tfplan.sha256)"
          test "$DOWN_HASH" = "$EXP_HASH" || { echo "Checksum mismatch! expected=$EXP_HASH got=$DOWN_HASH"; exit 1; }

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -input=false plan.tfplan

  # --------------------------------
  # DESTROY-PLAN (auto after apply)
  # --------------------------------
  destroy-plan:
    needs: apply
    if: needs.apply.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform
        run: |
          curl -sSL -O "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip -q terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Terraform Init
        run: terraform init -input=false

      - name: Create Destroy Plan
        run: terraform plan -destroy -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -out=destroy.tfplan

      - name: Checksum Destroy Plan
        run: sha256sum destroy.tfplan | awk '{print $1}' > destroy.tfplan.sha256

      - name: Upload Destroy Plan
        run: |
          SAFE_PREFIX="${{ github.repository }}-${{ github.sha }}"
          echo "SAFE_PREFIX=${SAFE_PREFIX}"
          gsutil cp destroy.tfplan gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan
          gsutil cp destroy.tfplan.sha256 gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan.sha256

  # --------------------------------
  # DESTROY-APPLY (manual approval)
  # --------------------------------
  destroy-apply:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy-apply'
    runs-on: ubuntu-latest
    environment: destroy-approval   # set this env in repo settings with required reviewers
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Terraform
        run: |
          curl -sSL -O "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip -q terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Resolve SAFE_PREFIX (which destroy plan to use)
        id: prefix
        run: |
          SHA="${{ github.event.inputs.plan_sha }}"
          if [ -z "$SHA" ]; then SHA="${{ github.sha }}"; fi
          echo "safe_prefix=${{ github.repository }}-${SHA}" >> $GITHUB_OUTPUT
          echo "Using destroy plan from SHA=$SHA"

      - name: Download Destroy Plan
        run: |
          SAFE_PREFIX="${{ steps.prefix.outputs.safe_prefix }}"
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan ./destroy.tfplan
          gsutil cp gs://${PLAN_BUCKET}/${SAFE_PREFIX}/${DESTROY_SUBPATH}/destroy.tfplan.sha256 ./destroy.tfplan.sha256

      - name: Verify checksum
        run: |
          DOWN_HASH="$(sha256sum destroy.tfplan | awk '{print $1}')"
          EXP_HASH="$(cat destroy.tfplan.sha256)"
          test "$DOWN_HASH" = "$EXP_HASH" || { echo "Checksum mismatch! expected=$EXP_HASH got=$DOWN_HASH"; exit 1; }

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Destroy Apply
        run: terraform apply -input=false destroy.tfplan
